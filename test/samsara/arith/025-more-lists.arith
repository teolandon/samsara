let listone:[num] = 2 :: 3 :: 4 :: ([]:num) in
let listtwo:[num] = 5 :: 6 :: 7 :: ([]:num) in
let zip:[num]->[num]->[num] =
  fix f (lone:[num]) : [num]->[num] =>
  fun (ltwo:[num]) : [num] =>
    if empty <- lone then
      []:num
    else if empty <- ltwo then
      []:num
    else ((hd <- lone)::(hd <- ltwo)::(f <- (tl <- lone) <- (tl <- ltwo)))
in
zip <- listone <- listtwo
